//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace RuBiz
{
    [DataContract(IsReference = true)]
    public partial class Usuario: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id_Usuario
        {
            get { return _id_Usuario; }
            set
            {
                if (_id_Usuario != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id_Usuario' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id_Usuario = value;
                    OnPropertyChanged("Id_Usuario");
                }
            }
        }
        private int _id_Usuario;
    
        [DataMember]
        public int Id_Card
        {
            get { return _id_Card; }
            set
            {
                if (_id_Card != value)
                {
                    _id_Card = value;
                    OnPropertyChanged("Id_Card");
                }
            }
        }
        private int _id_Card;
    
        [DataMember]
        public int Id_TipoUsuario
        {
            get { return _id_TipoUsuario; }
            set
            {
                if (_id_TipoUsuario != value)
                {
                    _id_TipoUsuario = value;
                    OnPropertyChanged("Id_TipoUsuario");
                }
            }
        }
        private int _id_TipoUsuario;
    
        [DataMember]
        public string Nome
        {
            get { return _nome; }
            set
            {
                if (_nome != value)
                {
                    _nome = value;
                    OnPropertyChanged("Nome");
                }
            }
        }
        private string _nome;
    
        [DataMember]
        public string RG
        {
            get { return _rG; }
            set
            {
                if (_rG != value)
                {
                    _rG = value;
                    OnPropertyChanged("RG");
                }
            }
        }
        private string _rG;
    
        [DataMember]
        public string CPF
        {
            get { return _cPF; }
            set
            {
                if (_cPF != value)
                {
                    _cPF = value;
                    OnPropertyChanged("CPF");
                }
            }
        }
        private string _cPF;
    
        [DataMember]
        public int Id_Curso
        {
            get { return _id_Curso; }
            set
            {
                if (_id_Curso != value)
                {
                    _id_Curso = value;
                    OnPropertyChanged("Id_Curso");
                }
            }
        }
        private int _id_Curso;
    
        [DataMember]
        public string Logradouro
        {
            get { return _logradouro; }
            set
            {
                if (_logradouro != value)
                {
                    _logradouro = value;
                    OnPropertyChanged("Logradouro");
                }
            }
        }
        private string _logradouro;
    
        [DataMember]
        public string Numero
        {
            get { return _numero; }
            set
            {
                if (_numero != value)
                {
                    _numero = value;
                    OnPropertyChanged("Numero");
                }
            }
        }
        private string _numero;
    
        [DataMember]
        public string Bairro
        {
            get { return _bairro; }
            set
            {
                if (_bairro != value)
                {
                    _bairro = value;
                    OnPropertyChanged("Bairro");
                }
            }
        }
        private string _bairro;
    
        [DataMember]
        public string Cidade
        {
            get { return _cidade; }
            set
            {
                if (_cidade != value)
                {
                    _cidade = value;
                    OnPropertyChanged("Cidade");
                }
            }
        }
        private string _cidade;
    
        [DataMember]
        public string UF
        {
            get { return _uF; }
            set
            {
                if (_uF != value)
                {
                    _uF = value;
                    OnPropertyChanged("UF");
                }
            }
        }
        private string _uF;
    
        [DataMember]
        public string CEP
        {
            get { return _cEP; }
            set
            {
                if (_cEP != value)
                {
                    _cEP = value;
                    OnPropertyChanged("CEP");
                }
            }
        }
        private string _cEP;
    
        [DataMember]
        public string Fone
        {
            get { return _fone; }
            set
            {
                if (_fone != value)
                {
                    _fone = value;
                    OnPropertyChanged("Fone");
                }
            }
        }
        private string _fone;
    
        [DataMember]
        public bool Bolsista
        {
            get { return _bolsista; }
            set
            {
                if (_bolsista != value)
                {
                    _bolsista = value;
                    OnPropertyChanged("Bolsista");
                }
            }
        }
        private bool _bolsista;
    
        [DataMember]
        public string Senha
        {
            get { return _senha; }
            set
            {
                if (_senha != value)
                {
                    _senha = value;
                    OnPropertyChanged("Senha");
                }
            }
        }
        private string _senha;
    
        [DataMember]
        public string DataNascimento
        {
            get { return _dataNascimento; }
            set
            {
                if (_dataNascimento != value)
                {
                    _dataNascimento = value;
                    OnPropertyChanged("DataNascimento");
                }
            }
        }
        private string _dataNascimento;
    
        [DataMember]
        public Nullable<int> Id_Periodo
        {
            get { return _id_Periodo; }
            set
            {
                if (_id_Periodo != value)
                {
                    _id_Periodo = value;
                    OnPropertyChanged("Id_Periodo");
                }
            }
        }
        private Nullable<int> _id_Periodo;
    
        [DataMember]
        public double Saldo
        {
            get { return _saldo; }
            set
            {
                if (_saldo != value)
                {
                    _saldo = value;
                    OnPropertyChanged("Saldo");
                }
            }
        }
        private double _saldo;
    
        [DataMember]
        public string Data_Refeicao
        {
            get { return _data_Refeicao; }
            set
            {
                if (_data_Refeicao != value)
                {
                    _data_Refeicao = value;
                    OnPropertyChanged("Data_Refeicao");
                }
            }
        }
        private string _data_Refeicao;
    
        [DataMember]
        public bool Almoco
        {
            get { return _almoco; }
            set
            {
                if (_almoco != value)
                {
                    _almoco = value;
                    OnPropertyChanged("Almoco");
                }
            }
        }
        private bool _almoco;
    
        [DataMember]
        public bool Jantar
        {
            get { return _jantar; }
            set
            {
                if (_jantar != value)
                {
                    _jantar = value;
                    OnPropertyChanged("Jantar");
                }
            }
        }
        private bool _jantar;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
